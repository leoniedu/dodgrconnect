% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_nodes_to_graph2.R
\name{add_nodes_to_graph2}
\alias{add_nodes_to_graph2}
\title{Insert new nodes into a graph with custom edge weights}
\usage{
add_nodes_to_graph2(
  graph,
  xy,
  dist_tol = 1e-06,
  intersections_only = FALSE,
  new_edge_type = NULL,
  wt_profile = NULL,
  wt_profile_file = NULL,
  surface = NULL
)
}
\arguments{
\item{graph}{A \code{data.frame} or \code{dodgr_streetnet} containing the graph edges}

\item{xy}{A \code{data.frame} or \code{matrix} of points to add. If a matrix, must have 2 columns
for x and y coordinates. If a data.frame, must include 'x' and 'y' columns.
Optionally can include 'id' column to specify vertex IDs.}

\item{dist_tol}{Minimum distance used to identify points lying directly on edges,
expressed in units of the distance column of \code{graph}}

\item{intersections_only}{If \code{FALSE} (default), adds edges to connect new points.
If \code{TRUE}, only splits edges at intersection points.}

\item{new_edge_type}{Optional highway type for new edges connecting points to the network.
If NULL (default), inherits type from parent edges.}

\item{wt_profile}{Name of weighting profile to use when new_edge_type is specified.
Required if new_edge_type is specified. Common values: "foot", "bicycle", "motorcar".}

\item{wt_profile_file}{Name of locally-stored, \code{.json}-formatted version of weighting
profiles. If NULL (default), uses the default profiles.}

\item{surface}{Surface type for new edges. Required if new_edge_type is specified.
Common values: "paved", "unpaved", "asphalt".}
}
\value{
A modified version of \code{graph}, with additional edges formed by
breaking previous edges at nearest perpendicular intersections with the
points, \code{xy}. When new_edge_type is specified, connecting edges use the
specified weights and profiles.
}
\description{
This function extends \code{dodgr::add_nodes_to_graph} by adding the ability to specify
custom weights for new edges. While the original function inherits weights from
parent edges, this version allows customization through weight profiles.
}
\details{
This inserts new nodes by extending lines from each input point to the edge
with the closest point of perpendicular intersection. That edge is then split
at that point of intersection, creating two new edges (or four for directed
edges). If \code{intersections_only = FALSE} (default), then additional edges are
inserted from those intersection points to the input points. If
\code{intersections_only = TRUE}, then nodes are added by splitting graph edges at
points of nearest perpendicular intersection, without adding additional edges
out to the actual input points.

In the former case, the properties of those new edges, such as distance and
time weightings, are inherited from the edges which are intersected, and may
need to be manually modified after calling this function.
}
\section{Key Differences from dodgr}{
:add_nodes_to_graph:
While the original function inherits all weights from parent edges, this version:
\itemize{
\item Allows specifying custom highway types for new connecting edges
\item Supports weight profile calculations for the new edges
\item Enables custom surface types
\item Falls back to inherited weights if no custom weights are specified
\item Optionally accepts vertex IDs in the xy data frame
}
}

\examples{
library(dodgr)
graph <- weight_streetnet(hampi, wt_profile = "foot")
dim(graph)

verts <- dodgr_vertices(graph)
set.seed(2)
npts <- 10
xy <- data.frame(
    x = min(verts$x) + runif(npts) * diff(range(verts$x)),
    y = min(verts$y) + runif(npts) * diff(range(verts$y)),
    id = paste0("new_", 1:npts)  # Optional vertex IDs
)

# Add points with inherited weights (like dodgr::add_nodes_to_graph)
graph1 <- add_nodes_to_graph2(graph, xy)

# Add points with custom footpath weights
graph2 <- add_nodes_to_graph2(graph, xy,
                             new_edge_type = "footway",
                             wt_profile = "foot",
                             surface = "paved")
}
