% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_nodes_to_graph2.R
\name{add_nodes_to_graph2}
\alias{add_nodes_to_graph2}
\title{Insert new nodes into a graph, breaking edges at point of nearest
intersection.}
\usage{
add_nodes_to_graph2(
  graph,
  xy,
  dist_tol = 1e-06,
  intersections_only = FALSE,
  new_edge_type = NULL,
  wt_profile = NULL,
  wt_profile_file = NULL,
  surface = NULL
)
}
\arguments{
\item{dist_tol}{Minimum distance used to identify points lying directly on edges,
than this distance, expressed in units of the distance column of \code{graph}.}

\item{intersections_only}{If \code{FALSE}}

\item{new_edge_type}{Optional highway type for new edges connecting points to the network. If NULL (default),
new edges will use the same weighting factors as the original edge being split.}

\item{wt_profile}{Name of weighting profile to use when new_edge_type is specified. If NULL (default),
new edges will use the same weighting factors as the original edge being split.}

\item{wt_profile_file}{Name of locally-stored, \code{.json}-formatted version of weighting profiles. If NULL (default),
uses the default profiles.}

\item{surface}{Surface type for new edges connecting points to the network. If NULL (default),
new edges will use the same surface type as the original edge being split.}
}
\value{
A modified version of \code{graph}, with additional edges formed by
breaking previous edges at nearest perpendicular intersections with the
points, \code{xy}.
}
\description{
Note that this routine presumes graphs to be \code{dodgr_streetnet} object, with
geographical coordinates.
}
\details{
This inserts new nodes by extending lines from each input point to the edge
with the closest point of perpendicular intersection. That edge is then split
at that point of intersection, creating two new edges (or four for directed
edges). If \code{intersections_only = FALSE} (default), then additional edges are
inserted from those intersection points to the input points. If
\code{intersections_only = TRUE}, then nodes are added by splitting graph edges at
points of nearest perpendicular intersection, without adding additional edges
out to the actual input points.

In the former case, the properties of those new edges, such as distance and
time weightings, are inherited from the edges which are intersected, and may
need to be manually modified after calling this function.
}
\examples{
library(dodgr)
graph <- weight_streetnet (hampi, wt_profile = "foot")
dim (graph)

verts <- dodgr_vertices (graph)
set.seed (2)
npts <- 10
xy <- data.frame (
    x = min (verts$x) + runif (npts) * diff (range (verts$x)),
    y = min (verts$y) + runif (npts) * diff (range (verts$y))
)

graph <- add_nodes_to_graph2 (graph, xy)
dim (graph) # more edges than original
}
\concept{match}
