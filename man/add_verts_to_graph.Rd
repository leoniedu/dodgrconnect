% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_verts_to_graph.R
\name{add_verts_to_graph}
\alias{add_verts_to_graph}
\title{Add vertices to graph by splitting edges}
\usage{
add_verts_to_graph(graph, xy, max_distance = Inf, bidirectional = TRUE)
}
\arguments{
\item{graph}{A dodgr graph to modify}

\item{xy}{Matrix or data.frame of x-y coordinates of points to add. If points
have an 'id' column, these IDs will be preserved, otherwise new IDs
will be generated.}

\item{bidirectional}{Logical; if TRUE, creates bidirectional edges for each
connection (default: FALSE)}
}
\value{
Modified graph with:
\itemize{
\item New vertices at projection points
\item Original edges split at projection points
\item All edge attributes preserved and properly weighted
\item Bidirectional edges if requested
}
}
\description{
Projects points onto the nearest edges in the graph and splits those edges at
the projection points. This maintains the network topology by creating new
vertices where points project onto existing edges. Each edge is split at the
projection point and new edges are created to maintain connectivity.
}
\details{
This function:
\enumerate{
\item Projects each point onto its nearest edge using match_pts_to_graph
\item Creates new vertices at projection points
\item Splits existing edges at these points
\item Maintains all original edge attributes and weights
\item Preserves existing point IDs or generates new ones if not provided
\item Creates bidirectional edges if requested
}
}
\examples{
# Create sample network
net <- weight_streetnet(dodgr_streetnet("hampi india"))

# Add points by splitting edges (unidirectional)
pts <- data.frame(x = c(76.4, 76.5), y = c(15.3, 15.4))
net_split <- add_verts_to_graph(net, pts, bidirectional = FALSE)

# Add points with bidirectional edges
net_split_bidir <- add_verts_to_graph(net, pts, bidirectional = TRUE)

}
\seealso{
\code{\link[=add_edges_to_graph]{add_edges_to_graph()}} for creating direct edges to vertices
}
