% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/break_long_edges.R
\name{break_long_edges}
\alias{break_long_edges}
\title{Break Long Edges in a Graph}
\usage{
break_long_edges(graph, max_d = NULL, verbose = TRUE)
}
\arguments{
\item{graph}{A data frame or dodgr_streetnet object with columns 'from_id', 'to_id', 'd', and 'component'}

\item{max_d}{Numeric. Maximum allowed edge distance. If NULL (default), uses the mean
distance of all edges in the graph}

\item{verbose}{Logical. If TRUE, displays progress information. Default is TRUE.}
}
\value{
A modified graph with long edges broken into shorter segments
by inserting new vertices. The returned object preserves the class of the input graph.
}
\description{
This function breaks long edges in a graph by inserting vertices along edges that
exceed a specified maximum distance.
}
\details{
The function iteratively processes edges longer than \code{max_d} by inserting
new vertices using \code{dodgr_insert_vertex}. This process continues until no edges
exceed the maximum distance threshold. Note that for edges longer than 2*max_d,
the process may create new edges that still exceed max_d, requiring additional
iterations. The process is guaranteed to finish as each split operation reduces
edge lengths by approximately half.
}
\examples{
\dontrun{
# Load sample data from dodgr
data(hampi, package = "dodgr")

# Create weighted street network
net <- dodgr::weight_streetnet(hampi)

# View initial distribution of edge lengths
summary(net$d)
hist(net$d, breaks = 50, main = "Original edge length distribution")

# Break long edges using mean distance as threshold
net_modified <- break_long_edges(net)  # Default verbose = TRUE

# Run quietly
net_modified2 <- break_long_edges(net, max_d = 100, verbose = FALSE)
}

}
